/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as PortalRouteRouteImport } from './routes/portal/route'
import { Route as AdminRouteRouteImport } from './routes/admin/route'
import { Route as IndexRouteImport } from './routes/index'
import { Route as PortalIndexRouteImport } from './routes/portal/index'
import { Route as AuthIndexRouteImport } from './routes/auth/index'
import { Route as AdminIndexRouteImport } from './routes/admin/index'
import { Route as PortalUsersRouteRouteImport } from './routes/portal/users/route'
import { Route as PortalTemplatesRouteRouteImport } from './routes/portal/templates/route'
import { Route as PortalSettingsRouteRouteImport } from './routes/portal/settings/route'
import { Route as PortalOverviewRouteRouteImport } from './routes/portal/overview/route'
import { Route as AdminUsersRouteRouteImport } from './routes/admin/users/route'
import { Route as AdminJobsRouteRouteImport } from './routes/admin/jobs/route'
import { Route as AdminDataRouteRouteImport } from './routes/admin/data/route'
import { Route as AdminAccountsRouteRouteImport } from './routes/admin/accounts/route'
import { Route as PortalUsersIndexRouteImport } from './routes/portal/users/index'
import { Route as PortalTemplatesIndexRouteImport } from './routes/portal/templates/index'
import { Route as PortalSettingsIndexRouteImport } from './routes/portal/settings/index'
import { Route as PortalOverviewIndexRouteImport } from './routes/portal/overview/index'
import { Route as AdminUsersIndexRouteImport } from './routes/admin/users/index'
import { Route as AdminSettingsIndexRouteImport } from './routes/admin/settings/index'
import { Route as AdminJobsIndexRouteImport } from './routes/admin/jobs/index'
import { Route as AdminDataIndexRouteImport } from './routes/admin/data/index'
import { Route as AdminCronjobsIndexRouteImport } from './routes/admin/cronjobs/index'
import { Route as AdminAccountsIndexRouteImport } from './routes/admin/accounts/index'
import { Route as PortalUsersNameRouteImport } from './routes/portal/users/$name'
import { Route as PortalSettingsVersionRouteImport } from './routes/portal/settings/version'
import { Route as PortalSettingsUserRouteImport } from './routes/portal/settings/user'
import { Route as PortalOverviewNodeRouteImport } from './routes/portal/overview/$node'
import { Route as PortalMonitorNetworkRouteImport } from './routes/portal/monitor/network'
import { Route as PortalMonitorIdleRouteImport } from './routes/portal/monitor/idle'
import { Route as PortalMonitorGpuRouteImport } from './routes/portal/monitor/gpu'
import { Route as PortalFilesSplatRouteImport } from './routes/portal/files/$'
import { Route as IngressJupyterNameRouteImport } from './routes/ingress/jupyter.$name'
import { Route as AdminUsersNameRouteImport } from './routes/admin/users/$name'
import { Route as AdminSettingsVersionRouteImport } from './routes/admin/settings/version'
import { Route as AdminMonitorNetworkRouteImport } from './routes/admin/monitor/network'
import { Route as AdminMonitorIdleRouteImport } from './routes/admin/monitor/idle'
import { Route as AdminMonitorGpuRouteImport } from './routes/admin/monitor/gpu'
import { Route as AdminJobsNameRouteImport } from './routes/admin/jobs/$name'
import { Route as AdminFilesSplatRouteImport } from './routes/admin/files/$'
import { Route as AdminDataIdRouteImport } from './routes/admin/data/$id'
import { Route as AdminAccountsIdRouteImport } from './routes/admin/accounts/$id'
import { Route as PortalSettingsOrdersRouteRouteImport } from './routes/portal/settings/orders/route'
import { Route as PortalJobsNewRouteRouteImport } from './routes/portal/jobs/new/route'
import { Route as PortalJobsDetailRouteRouteImport } from './routes/portal/jobs/detail/route'
import { Route as PortalDataModelsRouteRouteImport } from './routes/portal/data/models/route'
import { Route as PortalDataDatasetsRouteRouteImport } from './routes/portal/data/datasets/route'
import { Route as PortalDataBlocksRouteRouteImport } from './routes/portal/data/blocks/route'
import { Route as AdminSettingsOrdersRouteRouteImport } from './routes/admin/settings/orders/route'
import { Route as AdminEnvRegistryRouteRouteImport } from './routes/admin/env/registry/route'
import { Route as AdminClusterResourcesRouteRouteImport } from './routes/admin/cluster/resources/route'
import { Route as AdminClusterNodesRouteRouteImport } from './routes/admin/cluster/nodes/route'
import { Route as PortalSettingsOrdersIndexRouteImport } from './routes/portal/settings/orders/index'
import { Route as PortalJobsInterIndexRouteImport } from './routes/portal/jobs/inter/index'
import { Route as PortalJobsCustomIndexRouteImport } from './routes/portal/jobs/custom/index'
import { Route as PortalEnvRegistryIndexRouteImport } from './routes/portal/env/registry/index'
import { Route as PortalEnvImagesIndexRouteImport } from './routes/portal/env/images/index'
import { Route as PortalDataModelsIndexRouteImport } from './routes/portal/data/models/index'
import { Route as PortalDataDatasetsIndexRouteImport } from './routes/portal/data/datasets/index'
import { Route as PortalDataBlocksIndexRouteImport } from './routes/portal/data/blocks/index'
import { Route as AdminSettingsOrdersIndexRouteImport } from './routes/admin/settings/orders/index'
import { Route as AdminEnvRegistryIndexRouteImport } from './routes/admin/env/registry/index'
import { Route as AdminEnvImagesIndexRouteImport } from './routes/admin/env/images/index'
import { Route as AdminClusterResourcesIndexRouteImport } from './routes/admin/cluster/resources/index'
import { Route as AdminClusterNodesIndexRouteImport } from './routes/admin/cluster/nodes/index'
import { Route as PortalJobsNewTensorflowPsJobRouteImport } from './routes/portal/jobs/new/tensorflow-ps-job'
import { Route as PortalJobsNewSingleJobRouteImport } from './routes/portal/jobs/new/single-job'
import { Route as PortalJobsNewSeacsJobRouteImport } from './routes/portal/jobs/new/seacs-job'
import { Route as PortalJobsNewPytorchDdpJobRouteImport } from './routes/portal/jobs/new/pytorch-ddp-job'
import { Route as PortalJobsNewJupyterJobRouteImport } from './routes/portal/jobs/new/jupyter-job'
import { Route as PortalJobsNewEmiasJupyterJobRouteImport } from './routes/portal/jobs/new/emias-jupyter-job'
import { Route as PortalJobsNewEmiasJobRouteImport } from './routes/portal/jobs/new/emias-job'
import { Route as PortalJobsDetailNameRouteImport } from './routes/portal/jobs/detail/$name'
import { Route as PortalEnvRegistryNameRouteImport } from './routes/portal/env/registry/$name'
import { Route as PortalDataModelsIdRouteImport } from './routes/portal/data/models/$id'
import { Route as PortalDataDatasetsIdRouteImport } from './routes/portal/data/datasets/$id'
import { Route as PortalDataBlocksIdRouteImport } from './routes/portal/data/blocks/$id'
import { Route as AdminSettingsOrdersIdRouteImport } from './routes/admin/settings/orders/$id'
import { Route as AdminEnvRegistryNameRouteImport } from './routes/admin/env/registry/$name'
import { Route as AdminClusterNodesNodeRouteImport } from './routes/admin/cluster/nodes/$node'

const PortalRouteRoute = PortalRouteRouteImport.update({
  id: '/portal',
  path: '/portal',
  getParentRoute: () => rootRouteImport,
} as any)
const AdminRouteRoute = AdminRouteRouteImport.update({
  id: '/admin',
  path: '/admin',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const PortalIndexRoute = PortalIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => PortalRouteRoute,
} as any)
const AuthIndexRoute = AuthIndexRouteImport.update({
  id: '/auth/',
  path: '/auth/',
  getParentRoute: () => rootRouteImport,
} as any)
const AdminIndexRoute = AdminIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => AdminRouteRoute,
} as any)
const PortalUsersRouteRoute = PortalUsersRouteRouteImport.update({
  id: '/users',
  path: '/users',
  getParentRoute: () => PortalRouteRoute,
} as any)
const PortalTemplatesRouteRoute = PortalTemplatesRouteRouteImport.update({
  id: '/templates',
  path: '/templates',
  getParentRoute: () => PortalRouteRoute,
} as any)
const PortalSettingsRouteRoute = PortalSettingsRouteRouteImport.update({
  id: '/settings',
  path: '/settings',
  getParentRoute: () => PortalRouteRoute,
} as any)
const PortalOverviewRouteRoute = PortalOverviewRouteRouteImport.update({
  id: '/overview',
  path: '/overview',
  getParentRoute: () => PortalRouteRoute,
} as any)
const AdminUsersRouteRoute = AdminUsersRouteRouteImport.update({
  id: '/users',
  path: '/users',
  getParentRoute: () => AdminRouteRoute,
} as any)
const AdminJobsRouteRoute = AdminJobsRouteRouteImport.update({
  id: '/jobs',
  path: '/jobs',
  getParentRoute: () => AdminRouteRoute,
} as any)
const AdminDataRouteRoute = AdminDataRouteRouteImport.update({
  id: '/data',
  path: '/data',
  getParentRoute: () => AdminRouteRoute,
} as any)
const AdminAccountsRouteRoute = AdminAccountsRouteRouteImport.update({
  id: '/accounts',
  path: '/accounts',
  getParentRoute: () => AdminRouteRoute,
} as any)
const PortalUsersIndexRoute = PortalUsersIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => PortalUsersRouteRoute,
} as any)
const PortalTemplatesIndexRoute = PortalTemplatesIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => PortalTemplatesRouteRoute,
} as any)
const PortalSettingsIndexRoute = PortalSettingsIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => PortalSettingsRouteRoute,
} as any)
const PortalOverviewIndexRoute = PortalOverviewIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => PortalOverviewRouteRoute,
} as any)
const AdminUsersIndexRoute = AdminUsersIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => AdminUsersRouteRoute,
} as any)
const AdminSettingsIndexRoute = AdminSettingsIndexRouteImport.update({
  id: '/settings/',
  path: '/settings/',
  getParentRoute: () => AdminRouteRoute,
} as any)
const AdminJobsIndexRoute = AdminJobsIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => AdminJobsRouteRoute,
} as any)
const AdminDataIndexRoute = AdminDataIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => AdminDataRouteRoute,
} as any)
const AdminCronjobsIndexRoute = AdminCronjobsIndexRouteImport.update({
  id: '/cronjobs/',
  path: '/cronjobs/',
  getParentRoute: () => AdminRouteRoute,
} as any)
const AdminAccountsIndexRoute = AdminAccountsIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => AdminAccountsRouteRoute,
} as any)
const PortalUsersNameRoute = PortalUsersNameRouteImport.update({
  id: '/$name',
  path: '/$name',
  getParentRoute: () => PortalUsersRouteRoute,
} as any)
const PortalSettingsVersionRoute = PortalSettingsVersionRouteImport.update({
  id: '/version',
  path: '/version',
  getParentRoute: () => PortalSettingsRouteRoute,
} as any)
const PortalSettingsUserRoute = PortalSettingsUserRouteImport.update({
  id: '/user',
  path: '/user',
  getParentRoute: () => PortalSettingsRouteRoute,
} as any)
const PortalOverviewNodeRoute = PortalOverviewNodeRouteImport.update({
  id: '/$node',
  path: '/$node',
  getParentRoute: () => PortalOverviewRouteRoute,
} as any)
const PortalMonitorNetworkRoute = PortalMonitorNetworkRouteImport.update({
  id: '/monitor/network',
  path: '/monitor/network',
  getParentRoute: () => PortalRouteRoute,
} as any)
const PortalMonitorIdleRoute = PortalMonitorIdleRouteImport.update({
  id: '/monitor/idle',
  path: '/monitor/idle',
  getParentRoute: () => PortalRouteRoute,
} as any)
const PortalMonitorGpuRoute = PortalMonitorGpuRouteImport.update({
  id: '/monitor/gpu',
  path: '/monitor/gpu',
  getParentRoute: () => PortalRouteRoute,
} as any)
const PortalFilesSplatRoute = PortalFilesSplatRouteImport.update({
  id: '/files/$',
  path: '/files/$',
  getParentRoute: () => PortalRouteRoute,
} as any)
const IngressJupyterNameRoute = IngressJupyterNameRouteImport.update({
  id: '/ingress/jupyter/$name',
  path: '/ingress/jupyter/$name',
  getParentRoute: () => rootRouteImport,
} as any)
const AdminUsersNameRoute = AdminUsersNameRouteImport.update({
  id: '/$name',
  path: '/$name',
  getParentRoute: () => AdminUsersRouteRoute,
} as any)
const AdminSettingsVersionRoute = AdminSettingsVersionRouteImport.update({
  id: '/settings/version',
  path: '/settings/version',
  getParentRoute: () => AdminRouteRoute,
} as any)
const AdminMonitorNetworkRoute = AdminMonitorNetworkRouteImport.update({
  id: '/monitor/network',
  path: '/monitor/network',
  getParentRoute: () => AdminRouteRoute,
} as any)
const AdminMonitorIdleRoute = AdminMonitorIdleRouteImport.update({
  id: '/monitor/idle',
  path: '/monitor/idle',
  getParentRoute: () => AdminRouteRoute,
} as any)
const AdminMonitorGpuRoute = AdminMonitorGpuRouteImport.update({
  id: '/monitor/gpu',
  path: '/monitor/gpu',
  getParentRoute: () => AdminRouteRoute,
} as any)
const AdminJobsNameRoute = AdminJobsNameRouteImport.update({
  id: '/$name',
  path: '/$name',
  getParentRoute: () => AdminJobsRouteRoute,
} as any)
const AdminFilesSplatRoute = AdminFilesSplatRouteImport.update({
  id: '/files/$',
  path: '/files/$',
  getParentRoute: () => AdminRouteRoute,
} as any)
const AdminDataIdRoute = AdminDataIdRouteImport.update({
  id: '/$id',
  path: '/$id',
  getParentRoute: () => AdminDataRouteRoute,
} as any)
const AdminAccountsIdRoute = AdminAccountsIdRouteImport.update({
  id: '/$id',
  path: '/$id',
  getParentRoute: () => AdminAccountsRouteRoute,
} as any)
const PortalSettingsOrdersRouteRoute =
  PortalSettingsOrdersRouteRouteImport.update({
    id: '/orders',
    path: '/orders',
    getParentRoute: () => PortalSettingsRouteRoute,
  } as any)
const PortalJobsNewRouteRoute = PortalJobsNewRouteRouteImport.update({
  id: '/jobs/new',
  path: '/jobs/new',
  getParentRoute: () => PortalRouteRoute,
} as any)
const PortalJobsDetailRouteRoute = PortalJobsDetailRouteRouteImport.update({
  id: '/jobs/detail',
  path: '/jobs/detail',
  getParentRoute: () => PortalRouteRoute,
} as any)
const PortalDataModelsRouteRoute = PortalDataModelsRouteRouteImport.update({
  id: '/data/models',
  path: '/data/models',
  getParentRoute: () => PortalRouteRoute,
} as any)
const PortalDataDatasetsRouteRoute = PortalDataDatasetsRouteRouteImport.update({
  id: '/data/datasets',
  path: '/data/datasets',
  getParentRoute: () => PortalRouteRoute,
} as any)
const PortalDataBlocksRouteRoute = PortalDataBlocksRouteRouteImport.update({
  id: '/data/blocks',
  path: '/data/blocks',
  getParentRoute: () => PortalRouteRoute,
} as any)
const AdminSettingsOrdersRouteRoute =
  AdminSettingsOrdersRouteRouteImport.update({
    id: '/settings/orders',
    path: '/settings/orders',
    getParentRoute: () => AdminRouteRoute,
  } as any)
const AdminEnvRegistryRouteRoute = AdminEnvRegistryRouteRouteImport.update({
  id: '/env/registry',
  path: '/env/registry',
  getParentRoute: () => AdminRouteRoute,
} as any)
const AdminClusterResourcesRouteRoute =
  AdminClusterResourcesRouteRouteImport.update({
    id: '/cluster/resources',
    path: '/cluster/resources',
    getParentRoute: () => AdminRouteRoute,
  } as any)
const AdminClusterNodesRouteRoute = AdminClusterNodesRouteRouteImport.update({
  id: '/cluster/nodes',
  path: '/cluster/nodes',
  getParentRoute: () => AdminRouteRoute,
} as any)
const PortalSettingsOrdersIndexRoute =
  PortalSettingsOrdersIndexRouteImport.update({
    id: '/',
    path: '/',
    getParentRoute: () => PortalSettingsOrdersRouteRoute,
  } as any)
const PortalJobsInterIndexRoute = PortalJobsInterIndexRouteImport.update({
  id: '/jobs/inter/',
  path: '/jobs/inter/',
  getParentRoute: () => PortalRouteRoute,
} as any)
const PortalJobsCustomIndexRoute = PortalJobsCustomIndexRouteImport.update({
  id: '/jobs/custom/',
  path: '/jobs/custom/',
  getParentRoute: () => PortalRouteRoute,
} as any)
const PortalEnvRegistryIndexRoute = PortalEnvRegistryIndexRouteImport.update({
  id: '/env/registry/',
  path: '/env/registry/',
  getParentRoute: () => PortalRouteRoute,
} as any)
const PortalEnvImagesIndexRoute = PortalEnvImagesIndexRouteImport.update({
  id: '/env/images/',
  path: '/env/images/',
  getParentRoute: () => PortalRouteRoute,
} as any)
const PortalDataModelsIndexRoute = PortalDataModelsIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => PortalDataModelsRouteRoute,
} as any)
const PortalDataDatasetsIndexRoute = PortalDataDatasetsIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => PortalDataDatasetsRouteRoute,
} as any)
const PortalDataBlocksIndexRoute = PortalDataBlocksIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => PortalDataBlocksRouteRoute,
} as any)
const AdminSettingsOrdersIndexRoute =
  AdminSettingsOrdersIndexRouteImport.update({
    id: '/',
    path: '/',
    getParentRoute: () => AdminSettingsOrdersRouteRoute,
  } as any)
const AdminEnvRegistryIndexRoute = AdminEnvRegistryIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => AdminEnvRegistryRouteRoute,
} as any)
const AdminEnvImagesIndexRoute = AdminEnvImagesIndexRouteImport.update({
  id: '/env/images/',
  path: '/env/images/',
  getParentRoute: () => AdminRouteRoute,
} as any)
const AdminClusterResourcesIndexRoute =
  AdminClusterResourcesIndexRouteImport.update({
    id: '/',
    path: '/',
    getParentRoute: () => AdminClusterResourcesRouteRoute,
  } as any)
const AdminClusterNodesIndexRoute = AdminClusterNodesIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => AdminClusterNodesRouteRoute,
} as any)
const PortalJobsNewTensorflowPsJobRoute =
  PortalJobsNewTensorflowPsJobRouteImport.update({
    id: '/tensorflow-ps-job',
    path: '/tensorflow-ps-job',
    getParentRoute: () => PortalJobsNewRouteRoute,
  } as any)
const PortalJobsNewSingleJobRoute = PortalJobsNewSingleJobRouteImport.update({
  id: '/single-job',
  path: '/single-job',
  getParentRoute: () => PortalJobsNewRouteRoute,
} as any)
const PortalJobsNewSeacsJobRoute = PortalJobsNewSeacsJobRouteImport.update({
  id: '/seacs-job',
  path: '/seacs-job',
  getParentRoute: () => PortalJobsNewRouteRoute,
} as any)
const PortalJobsNewPytorchDdpJobRoute =
  PortalJobsNewPytorchDdpJobRouteImport.update({
    id: '/pytorch-ddp-job',
    path: '/pytorch-ddp-job',
    getParentRoute: () => PortalJobsNewRouteRoute,
  } as any)
const PortalJobsNewJupyterJobRoute = PortalJobsNewJupyterJobRouteImport.update({
  id: '/jupyter-job',
  path: '/jupyter-job',
  getParentRoute: () => PortalJobsNewRouteRoute,
} as any)
const PortalJobsNewEmiasJupyterJobRoute =
  PortalJobsNewEmiasJupyterJobRouteImport.update({
    id: '/emias-jupyter-job',
    path: '/emias-jupyter-job',
    getParentRoute: () => PortalJobsNewRouteRoute,
  } as any)
const PortalJobsNewEmiasJobRoute = PortalJobsNewEmiasJobRouteImport.update({
  id: '/emias-job',
  path: '/emias-job',
  getParentRoute: () => PortalJobsNewRouteRoute,
} as any)
const PortalJobsDetailNameRoute = PortalJobsDetailNameRouteImport.update({
  id: '/$name',
  path: '/$name',
  getParentRoute: () => PortalJobsDetailRouteRoute,
} as any)
const PortalEnvRegistryNameRoute = PortalEnvRegistryNameRouteImport.update({
  id: '/env/registry/$name',
  path: '/env/registry/$name',
  getParentRoute: () => PortalRouteRoute,
} as any)
const PortalDataModelsIdRoute = PortalDataModelsIdRouteImport.update({
  id: '/$id',
  path: '/$id',
  getParentRoute: () => PortalDataModelsRouteRoute,
} as any)
const PortalDataDatasetsIdRoute = PortalDataDatasetsIdRouteImport.update({
  id: '/$id',
  path: '/$id',
  getParentRoute: () => PortalDataDatasetsRouteRoute,
} as any)
const PortalDataBlocksIdRoute = PortalDataBlocksIdRouteImport.update({
  id: '/$id',
  path: '/$id',
  getParentRoute: () => PortalDataBlocksRouteRoute,
} as any)
const AdminSettingsOrdersIdRoute = AdminSettingsOrdersIdRouteImport.update({
  id: '/$id',
  path: '/$id',
  getParentRoute: () => AdminSettingsOrdersRouteRoute,
} as any)
const AdminEnvRegistryNameRoute = AdminEnvRegistryNameRouteImport.update({
  id: '/$name',
  path: '/$name',
  getParentRoute: () => AdminEnvRegistryRouteRoute,
} as any)
const AdminClusterNodesNodeRoute = AdminClusterNodesNodeRouteImport.update({
  id: '/$node',
  path: '/$node',
  getParentRoute: () => AdminClusterNodesRouteRoute,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/admin': typeof AdminRouteRouteWithChildren
  '/portal': typeof PortalRouteRouteWithChildren
  '/admin/accounts': typeof AdminAccountsRouteRouteWithChildren
  '/admin/data': typeof AdminDataRouteRouteWithChildren
  '/admin/jobs': typeof AdminJobsRouteRouteWithChildren
  '/admin/users': typeof AdminUsersRouteRouteWithChildren
  '/portal/overview': typeof PortalOverviewRouteRouteWithChildren
  '/portal/settings': typeof PortalSettingsRouteRouteWithChildren
  '/portal/templates': typeof PortalTemplatesRouteRouteWithChildren
  '/portal/users': typeof PortalUsersRouteRouteWithChildren
  '/admin/': typeof AdminIndexRoute
  '/auth': typeof AuthIndexRoute
  '/portal/': typeof PortalIndexRoute
  '/admin/cluster/nodes': typeof AdminClusterNodesRouteRouteWithChildren
  '/admin/cluster/resources': typeof AdminClusterResourcesRouteRouteWithChildren
  '/admin/env/registry': typeof AdminEnvRegistryRouteRouteWithChildren
  '/admin/settings/orders': typeof AdminSettingsOrdersRouteRouteWithChildren
  '/portal/data/blocks': typeof PortalDataBlocksRouteRouteWithChildren
  '/portal/data/datasets': typeof PortalDataDatasetsRouteRouteWithChildren
  '/portal/data/models': typeof PortalDataModelsRouteRouteWithChildren
  '/portal/jobs/detail': typeof PortalJobsDetailRouteRouteWithChildren
  '/portal/jobs/new': typeof PortalJobsNewRouteRouteWithChildren
  '/portal/settings/orders': typeof PortalSettingsOrdersRouteRouteWithChildren
  '/admin/accounts/$id': typeof AdminAccountsIdRoute
  '/admin/data/$id': typeof AdminDataIdRoute
  '/admin/files/$': typeof AdminFilesSplatRoute
  '/admin/jobs/$name': typeof AdminJobsNameRoute
  '/admin/monitor/gpu': typeof AdminMonitorGpuRoute
  '/admin/monitor/idle': typeof AdminMonitorIdleRoute
  '/admin/monitor/network': typeof AdminMonitorNetworkRoute
  '/admin/settings/version': typeof AdminSettingsVersionRoute
  '/admin/users/$name': typeof AdminUsersNameRoute
  '/ingress/jupyter/$name': typeof IngressJupyterNameRoute
  '/portal/files/$': typeof PortalFilesSplatRoute
  '/portal/monitor/gpu': typeof PortalMonitorGpuRoute
  '/portal/monitor/idle': typeof PortalMonitorIdleRoute
  '/portal/monitor/network': typeof PortalMonitorNetworkRoute
  '/portal/overview/$node': typeof PortalOverviewNodeRoute
  '/portal/settings/user': typeof PortalSettingsUserRoute
  '/portal/settings/version': typeof PortalSettingsVersionRoute
  '/portal/users/$name': typeof PortalUsersNameRoute
  '/admin/accounts/': typeof AdminAccountsIndexRoute
  '/admin/cronjobs': typeof AdminCronjobsIndexRoute
  '/admin/data/': typeof AdminDataIndexRoute
  '/admin/jobs/': typeof AdminJobsIndexRoute
  '/admin/settings': typeof AdminSettingsIndexRoute
  '/admin/users/': typeof AdminUsersIndexRoute
  '/portal/overview/': typeof PortalOverviewIndexRoute
  '/portal/settings/': typeof PortalSettingsIndexRoute
  '/portal/templates/': typeof PortalTemplatesIndexRoute
  '/portal/users/': typeof PortalUsersIndexRoute
  '/admin/cluster/nodes/$node': typeof AdminClusterNodesNodeRoute
  '/admin/env/registry/$name': typeof AdminEnvRegistryNameRoute
  '/admin/settings/orders/$id': typeof AdminSettingsOrdersIdRoute
  '/portal/data/blocks/$id': typeof PortalDataBlocksIdRoute
  '/portal/data/datasets/$id': typeof PortalDataDatasetsIdRoute
  '/portal/data/models/$id': typeof PortalDataModelsIdRoute
  '/portal/env/registry/$name': typeof PortalEnvRegistryNameRoute
  '/portal/jobs/detail/$name': typeof PortalJobsDetailNameRoute
  '/portal/jobs/new/emias-job': typeof PortalJobsNewEmiasJobRoute
  '/portal/jobs/new/emias-jupyter-job': typeof PortalJobsNewEmiasJupyterJobRoute
  '/portal/jobs/new/jupyter-job': typeof PortalJobsNewJupyterJobRoute
  '/portal/jobs/new/pytorch-ddp-job': typeof PortalJobsNewPytorchDdpJobRoute
  '/portal/jobs/new/seacs-job': typeof PortalJobsNewSeacsJobRoute
  '/portal/jobs/new/single-job': typeof PortalJobsNewSingleJobRoute
  '/portal/jobs/new/tensorflow-ps-job': typeof PortalJobsNewTensorflowPsJobRoute
  '/admin/cluster/nodes/': typeof AdminClusterNodesIndexRoute
  '/admin/cluster/resources/': typeof AdminClusterResourcesIndexRoute
  '/admin/env/images': typeof AdminEnvImagesIndexRoute
  '/admin/env/registry/': typeof AdminEnvRegistryIndexRoute
  '/admin/settings/orders/': typeof AdminSettingsOrdersIndexRoute
  '/portal/data/blocks/': typeof PortalDataBlocksIndexRoute
  '/portal/data/datasets/': typeof PortalDataDatasetsIndexRoute
  '/portal/data/models/': typeof PortalDataModelsIndexRoute
  '/portal/env/images': typeof PortalEnvImagesIndexRoute
  '/portal/env/registry': typeof PortalEnvRegistryIndexRoute
  '/portal/jobs/custom': typeof PortalJobsCustomIndexRoute
  '/portal/jobs/inter': typeof PortalJobsInterIndexRoute
  '/portal/settings/orders/': typeof PortalSettingsOrdersIndexRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/admin': typeof AdminIndexRoute
  '/auth': typeof AuthIndexRoute
  '/portal': typeof PortalIndexRoute
  '/portal/jobs/detail': typeof PortalJobsDetailRouteRouteWithChildren
  '/portal/jobs/new': typeof PortalJobsNewRouteRouteWithChildren
  '/admin/accounts/$id': typeof AdminAccountsIdRoute
  '/admin/data/$id': typeof AdminDataIdRoute
  '/admin/files/$': typeof AdminFilesSplatRoute
  '/admin/jobs/$name': typeof AdminJobsNameRoute
  '/admin/monitor/gpu': typeof AdminMonitorGpuRoute
  '/admin/monitor/idle': typeof AdminMonitorIdleRoute
  '/admin/monitor/network': typeof AdminMonitorNetworkRoute
  '/admin/settings/version': typeof AdminSettingsVersionRoute
  '/admin/users/$name': typeof AdminUsersNameRoute
  '/ingress/jupyter/$name': typeof IngressJupyterNameRoute
  '/portal/files/$': typeof PortalFilesSplatRoute
  '/portal/monitor/gpu': typeof PortalMonitorGpuRoute
  '/portal/monitor/idle': typeof PortalMonitorIdleRoute
  '/portal/monitor/network': typeof PortalMonitorNetworkRoute
  '/portal/overview/$node': typeof PortalOverviewNodeRoute
  '/portal/settings/user': typeof PortalSettingsUserRoute
  '/portal/settings/version': typeof PortalSettingsVersionRoute
  '/portal/users/$name': typeof PortalUsersNameRoute
  '/admin/accounts': typeof AdminAccountsIndexRoute
  '/admin/cronjobs': typeof AdminCronjobsIndexRoute
  '/admin/data': typeof AdminDataIndexRoute
  '/admin/jobs': typeof AdminJobsIndexRoute
  '/admin/settings': typeof AdminSettingsIndexRoute
  '/admin/users': typeof AdminUsersIndexRoute
  '/portal/overview': typeof PortalOverviewIndexRoute
  '/portal/settings': typeof PortalSettingsIndexRoute
  '/portal/templates': typeof PortalTemplatesIndexRoute
  '/portal/users': typeof PortalUsersIndexRoute
  '/admin/cluster/nodes/$node': typeof AdminClusterNodesNodeRoute
  '/admin/env/registry/$name': typeof AdminEnvRegistryNameRoute
  '/admin/settings/orders/$id': typeof AdminSettingsOrdersIdRoute
  '/portal/data/blocks/$id': typeof PortalDataBlocksIdRoute
  '/portal/data/datasets/$id': typeof PortalDataDatasetsIdRoute
  '/portal/data/models/$id': typeof PortalDataModelsIdRoute
  '/portal/env/registry/$name': typeof PortalEnvRegistryNameRoute
  '/portal/jobs/detail/$name': typeof PortalJobsDetailNameRoute
  '/portal/jobs/new/emias-job': typeof PortalJobsNewEmiasJobRoute
  '/portal/jobs/new/emias-jupyter-job': typeof PortalJobsNewEmiasJupyterJobRoute
  '/portal/jobs/new/jupyter-job': typeof PortalJobsNewJupyterJobRoute
  '/portal/jobs/new/pytorch-ddp-job': typeof PortalJobsNewPytorchDdpJobRoute
  '/portal/jobs/new/seacs-job': typeof PortalJobsNewSeacsJobRoute
  '/portal/jobs/new/single-job': typeof PortalJobsNewSingleJobRoute
  '/portal/jobs/new/tensorflow-ps-job': typeof PortalJobsNewTensorflowPsJobRoute
  '/admin/cluster/nodes': typeof AdminClusterNodesIndexRoute
  '/admin/cluster/resources': typeof AdminClusterResourcesIndexRoute
  '/admin/env/images': typeof AdminEnvImagesIndexRoute
  '/admin/env/registry': typeof AdminEnvRegistryIndexRoute
  '/admin/settings/orders': typeof AdminSettingsOrdersIndexRoute
  '/portal/data/blocks': typeof PortalDataBlocksIndexRoute
  '/portal/data/datasets': typeof PortalDataDatasetsIndexRoute
  '/portal/data/models': typeof PortalDataModelsIndexRoute
  '/portal/env/images': typeof PortalEnvImagesIndexRoute
  '/portal/env/registry': typeof PortalEnvRegistryIndexRoute
  '/portal/jobs/custom': typeof PortalJobsCustomIndexRoute
  '/portal/jobs/inter': typeof PortalJobsInterIndexRoute
  '/portal/settings/orders': typeof PortalSettingsOrdersIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/admin': typeof AdminRouteRouteWithChildren
  '/portal': typeof PortalRouteRouteWithChildren
  '/admin/accounts': typeof AdminAccountsRouteRouteWithChildren
  '/admin/data': typeof AdminDataRouteRouteWithChildren
  '/admin/jobs': typeof AdminJobsRouteRouteWithChildren
  '/admin/users': typeof AdminUsersRouteRouteWithChildren
  '/portal/overview': typeof PortalOverviewRouteRouteWithChildren
  '/portal/settings': typeof PortalSettingsRouteRouteWithChildren
  '/portal/templates': typeof PortalTemplatesRouteRouteWithChildren
  '/portal/users': typeof PortalUsersRouteRouteWithChildren
  '/admin/': typeof AdminIndexRoute
  '/auth/': typeof AuthIndexRoute
  '/portal/': typeof PortalIndexRoute
  '/admin/cluster/nodes': typeof AdminClusterNodesRouteRouteWithChildren
  '/admin/cluster/resources': typeof AdminClusterResourcesRouteRouteWithChildren
  '/admin/env/registry': typeof AdminEnvRegistryRouteRouteWithChildren
  '/admin/settings/orders': typeof AdminSettingsOrdersRouteRouteWithChildren
  '/portal/data/blocks': typeof PortalDataBlocksRouteRouteWithChildren
  '/portal/data/datasets': typeof PortalDataDatasetsRouteRouteWithChildren
  '/portal/data/models': typeof PortalDataModelsRouteRouteWithChildren
  '/portal/jobs/detail': typeof PortalJobsDetailRouteRouteWithChildren
  '/portal/jobs/new': typeof PortalJobsNewRouteRouteWithChildren
  '/portal/settings/orders': typeof PortalSettingsOrdersRouteRouteWithChildren
  '/admin/accounts/$id': typeof AdminAccountsIdRoute
  '/admin/data/$id': typeof AdminDataIdRoute
  '/admin/files/$': typeof AdminFilesSplatRoute
  '/admin/jobs/$name': typeof AdminJobsNameRoute
  '/admin/monitor/gpu': typeof AdminMonitorGpuRoute
  '/admin/monitor/idle': typeof AdminMonitorIdleRoute
  '/admin/monitor/network': typeof AdminMonitorNetworkRoute
  '/admin/settings/version': typeof AdminSettingsVersionRoute
  '/admin/users/$name': typeof AdminUsersNameRoute
  '/ingress/jupyter/$name': typeof IngressJupyterNameRoute
  '/portal/files/$': typeof PortalFilesSplatRoute
  '/portal/monitor/gpu': typeof PortalMonitorGpuRoute
  '/portal/monitor/idle': typeof PortalMonitorIdleRoute
  '/portal/monitor/network': typeof PortalMonitorNetworkRoute
  '/portal/overview/$node': typeof PortalOverviewNodeRoute
  '/portal/settings/user': typeof PortalSettingsUserRoute
  '/portal/settings/version': typeof PortalSettingsVersionRoute
  '/portal/users/$name': typeof PortalUsersNameRoute
  '/admin/accounts/': typeof AdminAccountsIndexRoute
  '/admin/cronjobs/': typeof AdminCronjobsIndexRoute
  '/admin/data/': typeof AdminDataIndexRoute
  '/admin/jobs/': typeof AdminJobsIndexRoute
  '/admin/settings/': typeof AdminSettingsIndexRoute
  '/admin/users/': typeof AdminUsersIndexRoute
  '/portal/overview/': typeof PortalOverviewIndexRoute
  '/portal/settings/': typeof PortalSettingsIndexRoute
  '/portal/templates/': typeof PortalTemplatesIndexRoute
  '/portal/users/': typeof PortalUsersIndexRoute
  '/admin/cluster/nodes/$node': typeof AdminClusterNodesNodeRoute
  '/admin/env/registry/$name': typeof AdminEnvRegistryNameRoute
  '/admin/settings/orders/$id': typeof AdminSettingsOrdersIdRoute
  '/portal/data/blocks/$id': typeof PortalDataBlocksIdRoute
  '/portal/data/datasets/$id': typeof PortalDataDatasetsIdRoute
  '/portal/data/models/$id': typeof PortalDataModelsIdRoute
  '/portal/env/registry/$name': typeof PortalEnvRegistryNameRoute
  '/portal/jobs/detail/$name': typeof PortalJobsDetailNameRoute
  '/portal/jobs/new/emias-job': typeof PortalJobsNewEmiasJobRoute
  '/portal/jobs/new/emias-jupyter-job': typeof PortalJobsNewEmiasJupyterJobRoute
  '/portal/jobs/new/jupyter-job': typeof PortalJobsNewJupyterJobRoute
  '/portal/jobs/new/pytorch-ddp-job': typeof PortalJobsNewPytorchDdpJobRoute
  '/portal/jobs/new/seacs-job': typeof PortalJobsNewSeacsJobRoute
  '/portal/jobs/new/single-job': typeof PortalJobsNewSingleJobRoute
  '/portal/jobs/new/tensorflow-ps-job': typeof PortalJobsNewTensorflowPsJobRoute
  '/admin/cluster/nodes/': typeof AdminClusterNodesIndexRoute
  '/admin/cluster/resources/': typeof AdminClusterResourcesIndexRoute
  '/admin/env/images/': typeof AdminEnvImagesIndexRoute
  '/admin/env/registry/': typeof AdminEnvRegistryIndexRoute
  '/admin/settings/orders/': typeof AdminSettingsOrdersIndexRoute
  '/portal/data/blocks/': typeof PortalDataBlocksIndexRoute
  '/portal/data/datasets/': typeof PortalDataDatasetsIndexRoute
  '/portal/data/models/': typeof PortalDataModelsIndexRoute
  '/portal/env/images/': typeof PortalEnvImagesIndexRoute
  '/portal/env/registry/': typeof PortalEnvRegistryIndexRoute
  '/portal/jobs/custom/': typeof PortalJobsCustomIndexRoute
  '/portal/jobs/inter/': typeof PortalJobsInterIndexRoute
  '/portal/settings/orders/': typeof PortalSettingsOrdersIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/admin'
    | '/portal'
    | '/admin/accounts'
    | '/admin/data'
    | '/admin/jobs'
    | '/admin/users'
    | '/portal/overview'
    | '/portal/settings'
    | '/portal/templates'
    | '/portal/users'
    | '/admin/'
    | '/auth'
    | '/portal/'
    | '/admin/cluster/nodes'
    | '/admin/cluster/resources'
    | '/admin/env/registry'
    | '/admin/settings/orders'
    | '/portal/data/blocks'
    | '/portal/data/datasets'
    | '/portal/data/models'
    | '/portal/jobs/detail'
    | '/portal/jobs/new'
    | '/portal/settings/orders'
    | '/admin/accounts/$id'
    | '/admin/data/$id'
    | '/admin/files/$'
    | '/admin/jobs/$name'
    | '/admin/monitor/gpu'
    | '/admin/monitor/idle'
    | '/admin/monitor/network'
    | '/admin/settings/version'
    | '/admin/users/$name'
    | '/ingress/jupyter/$name'
    | '/portal/files/$'
    | '/portal/monitor/gpu'
    | '/portal/monitor/idle'
    | '/portal/monitor/network'
    | '/portal/overview/$node'
    | '/portal/settings/user'
    | '/portal/settings/version'
    | '/portal/users/$name'
    | '/admin/accounts/'
    | '/admin/cronjobs'
    | '/admin/data/'
    | '/admin/jobs/'
    | '/admin/settings'
    | '/admin/users/'
    | '/portal/overview/'
    | '/portal/settings/'
    | '/portal/templates/'
    | '/portal/users/'
    | '/admin/cluster/nodes/$node'
    | '/admin/env/registry/$name'
    | '/admin/settings/orders/$id'
    | '/portal/data/blocks/$id'
    | '/portal/data/datasets/$id'
    | '/portal/data/models/$id'
    | '/portal/env/registry/$name'
    | '/portal/jobs/detail/$name'
    | '/portal/jobs/new/emias-job'
    | '/portal/jobs/new/emias-jupyter-job'
    | '/portal/jobs/new/jupyter-job'
    | '/portal/jobs/new/pytorch-ddp-job'
    | '/portal/jobs/new/seacs-job'
    | '/portal/jobs/new/single-job'
    | '/portal/jobs/new/tensorflow-ps-job'
    | '/admin/cluster/nodes/'
    | '/admin/cluster/resources/'
    | '/admin/env/images'
    | '/admin/env/registry/'
    | '/admin/settings/orders/'
    | '/portal/data/blocks/'
    | '/portal/data/datasets/'
    | '/portal/data/models/'
    | '/portal/env/images'
    | '/portal/env/registry'
    | '/portal/jobs/custom'
    | '/portal/jobs/inter'
    | '/portal/settings/orders/'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/admin'
    | '/auth'
    | '/portal'
    | '/portal/jobs/detail'
    | '/portal/jobs/new'
    | '/admin/accounts/$id'
    | '/admin/data/$id'
    | '/admin/files/$'
    | '/admin/jobs/$name'
    | '/admin/monitor/gpu'
    | '/admin/monitor/idle'
    | '/admin/monitor/network'
    | '/admin/settings/version'
    | '/admin/users/$name'
    | '/ingress/jupyter/$name'
    | '/portal/files/$'
    | '/portal/monitor/gpu'
    | '/portal/monitor/idle'
    | '/portal/monitor/network'
    | '/portal/overview/$node'
    | '/portal/settings/user'
    | '/portal/settings/version'
    | '/portal/users/$name'
    | '/admin/accounts'
    | '/admin/cronjobs'
    | '/admin/data'
    | '/admin/jobs'
    | '/admin/settings'
    | '/admin/users'
    | '/portal/overview'
    | '/portal/settings'
    | '/portal/templates'
    | '/portal/users'
    | '/admin/cluster/nodes/$node'
    | '/admin/env/registry/$name'
    | '/admin/settings/orders/$id'
    | '/portal/data/blocks/$id'
    | '/portal/data/datasets/$id'
    | '/portal/data/models/$id'
    | '/portal/env/registry/$name'
    | '/portal/jobs/detail/$name'
    | '/portal/jobs/new/emias-job'
    | '/portal/jobs/new/emias-jupyter-job'
    | '/portal/jobs/new/jupyter-job'
    | '/portal/jobs/new/pytorch-ddp-job'
    | '/portal/jobs/new/seacs-job'
    | '/portal/jobs/new/single-job'
    | '/portal/jobs/new/tensorflow-ps-job'
    | '/admin/cluster/nodes'
    | '/admin/cluster/resources'
    | '/admin/env/images'
    | '/admin/env/registry'
    | '/admin/settings/orders'
    | '/portal/data/blocks'
    | '/portal/data/datasets'
    | '/portal/data/models'
    | '/portal/env/images'
    | '/portal/env/registry'
    | '/portal/jobs/custom'
    | '/portal/jobs/inter'
    | '/portal/settings/orders'
  id:
    | '__root__'
    | '/'
    | '/admin'
    | '/portal'
    | '/admin/accounts'
    | '/admin/data'
    | '/admin/jobs'
    | '/admin/users'
    | '/portal/overview'
    | '/portal/settings'
    | '/portal/templates'
    | '/portal/users'
    | '/admin/'
    | '/auth/'
    | '/portal/'
    | '/admin/cluster/nodes'
    | '/admin/cluster/resources'
    | '/admin/env/registry'
    | '/admin/settings/orders'
    | '/portal/data/blocks'
    | '/portal/data/datasets'
    | '/portal/data/models'
    | '/portal/jobs/detail'
    | '/portal/jobs/new'
    | '/portal/settings/orders'
    | '/admin/accounts/$id'
    | '/admin/data/$id'
    | '/admin/files/$'
    | '/admin/jobs/$name'
    | '/admin/monitor/gpu'
    | '/admin/monitor/idle'
    | '/admin/monitor/network'
    | '/admin/settings/version'
    | '/admin/users/$name'
    | '/ingress/jupyter/$name'
    | '/portal/files/$'
    | '/portal/monitor/gpu'
    | '/portal/monitor/idle'
    | '/portal/monitor/network'
    | '/portal/overview/$node'
    | '/portal/settings/user'
    | '/portal/settings/version'
    | '/portal/users/$name'
    | '/admin/accounts/'
    | '/admin/cronjobs/'
    | '/admin/data/'
    | '/admin/jobs/'
    | '/admin/settings/'
    | '/admin/users/'
    | '/portal/overview/'
    | '/portal/settings/'
    | '/portal/templates/'
    | '/portal/users/'
    | '/admin/cluster/nodes/$node'
    | '/admin/env/registry/$name'
    | '/admin/settings/orders/$id'
    | '/portal/data/blocks/$id'
    | '/portal/data/datasets/$id'
    | '/portal/data/models/$id'
    | '/portal/env/registry/$name'
    | '/portal/jobs/detail/$name'
    | '/portal/jobs/new/emias-job'
    | '/portal/jobs/new/emias-jupyter-job'
    | '/portal/jobs/new/jupyter-job'
    | '/portal/jobs/new/pytorch-ddp-job'
    | '/portal/jobs/new/seacs-job'
    | '/portal/jobs/new/single-job'
    | '/portal/jobs/new/tensorflow-ps-job'
    | '/admin/cluster/nodes/'
    | '/admin/cluster/resources/'
    | '/admin/env/images/'
    | '/admin/env/registry/'
    | '/admin/settings/orders/'
    | '/portal/data/blocks/'
    | '/portal/data/datasets/'
    | '/portal/data/models/'
    | '/portal/env/images/'
    | '/portal/env/registry/'
    | '/portal/jobs/custom/'
    | '/portal/jobs/inter/'
    | '/portal/settings/orders/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AdminRouteRoute: typeof AdminRouteRouteWithChildren
  PortalRouteRoute: typeof PortalRouteRouteWithChildren
  AuthIndexRoute: typeof AuthIndexRoute
  IngressJupyterNameRoute: typeof IngressJupyterNameRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/portal': {
      id: '/portal'
      path: '/portal'
      fullPath: '/portal'
      preLoaderRoute: typeof PortalRouteRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/admin': {
      id: '/admin'
      path: '/admin'
      fullPath: '/admin'
      preLoaderRoute: typeof AdminRouteRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/portal/': {
      id: '/portal/'
      path: '/'
      fullPath: '/portal/'
      preLoaderRoute: typeof PortalIndexRouteImport
      parentRoute: typeof PortalRouteRoute
    }
    '/auth/': {
      id: '/auth/'
      path: '/auth'
      fullPath: '/auth'
      preLoaderRoute: typeof AuthIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/admin/': {
      id: '/admin/'
      path: '/'
      fullPath: '/admin/'
      preLoaderRoute: typeof AdminIndexRouteImport
      parentRoute: typeof AdminRouteRoute
    }
    '/portal/users': {
      id: '/portal/users'
      path: '/users'
      fullPath: '/portal/users'
      preLoaderRoute: typeof PortalUsersRouteRouteImport
      parentRoute: typeof PortalRouteRoute
    }
    '/portal/templates': {
      id: '/portal/templates'
      path: '/templates'
      fullPath: '/portal/templates'
      preLoaderRoute: typeof PortalTemplatesRouteRouteImport
      parentRoute: typeof PortalRouteRoute
    }
    '/portal/settings': {
      id: '/portal/settings'
      path: '/settings'
      fullPath: '/portal/settings'
      preLoaderRoute: typeof PortalSettingsRouteRouteImport
      parentRoute: typeof PortalRouteRoute
    }
    '/portal/overview': {
      id: '/portal/overview'
      path: '/overview'
      fullPath: '/portal/overview'
      preLoaderRoute: typeof PortalOverviewRouteRouteImport
      parentRoute: typeof PortalRouteRoute
    }
    '/admin/users': {
      id: '/admin/users'
      path: '/users'
      fullPath: '/admin/users'
      preLoaderRoute: typeof AdminUsersRouteRouteImport
      parentRoute: typeof AdminRouteRoute
    }
    '/admin/jobs': {
      id: '/admin/jobs'
      path: '/jobs'
      fullPath: '/admin/jobs'
      preLoaderRoute: typeof AdminJobsRouteRouteImport
      parentRoute: typeof AdminRouteRoute
    }
    '/admin/data': {
      id: '/admin/data'
      path: '/data'
      fullPath: '/admin/data'
      preLoaderRoute: typeof AdminDataRouteRouteImport
      parentRoute: typeof AdminRouteRoute
    }
    '/admin/accounts': {
      id: '/admin/accounts'
      path: '/accounts'
      fullPath: '/admin/accounts'
      preLoaderRoute: typeof AdminAccountsRouteRouteImport
      parentRoute: typeof AdminRouteRoute
    }
    '/portal/users/': {
      id: '/portal/users/'
      path: '/'
      fullPath: '/portal/users/'
      preLoaderRoute: typeof PortalUsersIndexRouteImport
      parentRoute: typeof PortalUsersRouteRoute
    }
    '/portal/templates/': {
      id: '/portal/templates/'
      path: '/'
      fullPath: '/portal/templates/'
      preLoaderRoute: typeof PortalTemplatesIndexRouteImport
      parentRoute: typeof PortalTemplatesRouteRoute
    }
    '/portal/settings/': {
      id: '/portal/settings/'
      path: '/'
      fullPath: '/portal/settings/'
      preLoaderRoute: typeof PortalSettingsIndexRouteImport
      parentRoute: typeof PortalSettingsRouteRoute
    }
    '/portal/overview/': {
      id: '/portal/overview/'
      path: '/'
      fullPath: '/portal/overview/'
      preLoaderRoute: typeof PortalOverviewIndexRouteImport
      parentRoute: typeof PortalOverviewRouteRoute
    }
    '/admin/users/': {
      id: '/admin/users/'
      path: '/'
      fullPath: '/admin/users/'
      preLoaderRoute: typeof AdminUsersIndexRouteImport
      parentRoute: typeof AdminUsersRouteRoute
    }
    '/admin/settings/': {
      id: '/admin/settings/'
      path: '/settings'
      fullPath: '/admin/settings'
      preLoaderRoute: typeof AdminSettingsIndexRouteImport
      parentRoute: typeof AdminRouteRoute
    }
    '/admin/jobs/': {
      id: '/admin/jobs/'
      path: '/'
      fullPath: '/admin/jobs/'
      preLoaderRoute: typeof AdminJobsIndexRouteImport
      parentRoute: typeof AdminJobsRouteRoute
    }
    '/admin/data/': {
      id: '/admin/data/'
      path: '/'
      fullPath: '/admin/data/'
      preLoaderRoute: typeof AdminDataIndexRouteImport
      parentRoute: typeof AdminDataRouteRoute
    }
    '/admin/cronjobs/': {
      id: '/admin/cronjobs/'
      path: '/cronjobs'
      fullPath: '/admin/cronjobs'
      preLoaderRoute: typeof AdminCronjobsIndexRouteImport
      parentRoute: typeof AdminRouteRoute
    }
    '/admin/accounts/': {
      id: '/admin/accounts/'
      path: '/'
      fullPath: '/admin/accounts/'
      preLoaderRoute: typeof AdminAccountsIndexRouteImport
      parentRoute: typeof AdminAccountsRouteRoute
    }
    '/portal/users/$name': {
      id: '/portal/users/$name'
      path: '/$name'
      fullPath: '/portal/users/$name'
      preLoaderRoute: typeof PortalUsersNameRouteImport
      parentRoute: typeof PortalUsersRouteRoute
    }
    '/portal/settings/version': {
      id: '/portal/settings/version'
      path: '/version'
      fullPath: '/portal/settings/version'
      preLoaderRoute: typeof PortalSettingsVersionRouteImport
      parentRoute: typeof PortalSettingsRouteRoute
    }
    '/portal/settings/user': {
      id: '/portal/settings/user'
      path: '/user'
      fullPath: '/portal/settings/user'
      preLoaderRoute: typeof PortalSettingsUserRouteImport
      parentRoute: typeof PortalSettingsRouteRoute
    }
    '/portal/overview/$node': {
      id: '/portal/overview/$node'
      path: '/$node'
      fullPath: '/portal/overview/$node'
      preLoaderRoute: typeof PortalOverviewNodeRouteImport
      parentRoute: typeof PortalOverviewRouteRoute
    }
    '/portal/monitor/network': {
      id: '/portal/monitor/network'
      path: '/monitor/network'
      fullPath: '/portal/monitor/network'
      preLoaderRoute: typeof PortalMonitorNetworkRouteImport
      parentRoute: typeof PortalRouteRoute
    }
    '/portal/monitor/idle': {
      id: '/portal/monitor/idle'
      path: '/monitor/idle'
      fullPath: '/portal/monitor/idle'
      preLoaderRoute: typeof PortalMonitorIdleRouteImport
      parentRoute: typeof PortalRouteRoute
    }
    '/portal/monitor/gpu': {
      id: '/portal/monitor/gpu'
      path: '/monitor/gpu'
      fullPath: '/portal/monitor/gpu'
      preLoaderRoute: typeof PortalMonitorGpuRouteImport
      parentRoute: typeof PortalRouteRoute
    }
    '/portal/files/$': {
      id: '/portal/files/$'
      path: '/files/$'
      fullPath: '/portal/files/$'
      preLoaderRoute: typeof PortalFilesSplatRouteImport
      parentRoute: typeof PortalRouteRoute
    }
    '/ingress/jupyter/$name': {
      id: '/ingress/jupyter/$name'
      path: '/ingress/jupyter/$name'
      fullPath: '/ingress/jupyter/$name'
      preLoaderRoute: typeof IngressJupyterNameRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/admin/users/$name': {
      id: '/admin/users/$name'
      path: '/$name'
      fullPath: '/admin/users/$name'
      preLoaderRoute: typeof AdminUsersNameRouteImport
      parentRoute: typeof AdminUsersRouteRoute
    }
    '/admin/settings/version': {
      id: '/admin/settings/version'
      path: '/settings/version'
      fullPath: '/admin/settings/version'
      preLoaderRoute: typeof AdminSettingsVersionRouteImport
      parentRoute: typeof AdminRouteRoute
    }
    '/admin/monitor/network': {
      id: '/admin/monitor/network'
      path: '/monitor/network'
      fullPath: '/admin/monitor/network'
      preLoaderRoute: typeof AdminMonitorNetworkRouteImport
      parentRoute: typeof AdminRouteRoute
    }
    '/admin/monitor/idle': {
      id: '/admin/monitor/idle'
      path: '/monitor/idle'
      fullPath: '/admin/monitor/idle'
      preLoaderRoute: typeof AdminMonitorIdleRouteImport
      parentRoute: typeof AdminRouteRoute
    }
    '/admin/monitor/gpu': {
      id: '/admin/monitor/gpu'
      path: '/monitor/gpu'
      fullPath: '/admin/monitor/gpu'
      preLoaderRoute: typeof AdminMonitorGpuRouteImport
      parentRoute: typeof AdminRouteRoute
    }
    '/admin/jobs/$name': {
      id: '/admin/jobs/$name'
      path: '/$name'
      fullPath: '/admin/jobs/$name'
      preLoaderRoute: typeof AdminJobsNameRouteImport
      parentRoute: typeof AdminJobsRouteRoute
    }
    '/admin/files/$': {
      id: '/admin/files/$'
      path: '/files/$'
      fullPath: '/admin/files/$'
      preLoaderRoute: typeof AdminFilesSplatRouteImport
      parentRoute: typeof AdminRouteRoute
    }
    '/admin/data/$id': {
      id: '/admin/data/$id'
      path: '/$id'
      fullPath: '/admin/data/$id'
      preLoaderRoute: typeof AdminDataIdRouteImport
      parentRoute: typeof AdminDataRouteRoute
    }
    '/admin/accounts/$id': {
      id: '/admin/accounts/$id'
      path: '/$id'
      fullPath: '/admin/accounts/$id'
      preLoaderRoute: typeof AdminAccountsIdRouteImport
      parentRoute: typeof AdminAccountsRouteRoute
    }
    '/portal/settings/orders': {
      id: '/portal/settings/orders'
      path: '/orders'
      fullPath: '/portal/settings/orders'
      preLoaderRoute: typeof PortalSettingsOrdersRouteRouteImport
      parentRoute: typeof PortalSettingsRouteRoute
    }
    '/portal/jobs/new': {
      id: '/portal/jobs/new'
      path: '/jobs/new'
      fullPath: '/portal/jobs/new'
      preLoaderRoute: typeof PortalJobsNewRouteRouteImport
      parentRoute: typeof PortalRouteRoute
    }
    '/portal/jobs/detail': {
      id: '/portal/jobs/detail'
      path: '/jobs/detail'
      fullPath: '/portal/jobs/detail'
      preLoaderRoute: typeof PortalJobsDetailRouteRouteImport
      parentRoute: typeof PortalRouteRoute
    }
    '/portal/data/models': {
      id: '/portal/data/models'
      path: '/data/models'
      fullPath: '/portal/data/models'
      preLoaderRoute: typeof PortalDataModelsRouteRouteImport
      parentRoute: typeof PortalRouteRoute
    }
    '/portal/data/datasets': {
      id: '/portal/data/datasets'
      path: '/data/datasets'
      fullPath: '/portal/data/datasets'
      preLoaderRoute: typeof PortalDataDatasetsRouteRouteImport
      parentRoute: typeof PortalRouteRoute
    }
    '/portal/data/blocks': {
      id: '/portal/data/blocks'
      path: '/data/blocks'
      fullPath: '/portal/data/blocks'
      preLoaderRoute: typeof PortalDataBlocksRouteRouteImport
      parentRoute: typeof PortalRouteRoute
    }
    '/admin/settings/orders': {
      id: '/admin/settings/orders'
      path: '/settings/orders'
      fullPath: '/admin/settings/orders'
      preLoaderRoute: typeof AdminSettingsOrdersRouteRouteImport
      parentRoute: typeof AdminRouteRoute
    }
    '/admin/env/registry': {
      id: '/admin/env/registry'
      path: '/env/registry'
      fullPath: '/admin/env/registry'
      preLoaderRoute: typeof AdminEnvRegistryRouteRouteImport
      parentRoute: typeof AdminRouteRoute
    }
    '/admin/cluster/resources': {
      id: '/admin/cluster/resources'
      path: '/cluster/resources'
      fullPath: '/admin/cluster/resources'
      preLoaderRoute: typeof AdminClusterResourcesRouteRouteImport
      parentRoute: typeof AdminRouteRoute
    }
    '/admin/cluster/nodes': {
      id: '/admin/cluster/nodes'
      path: '/cluster/nodes'
      fullPath: '/admin/cluster/nodes'
      preLoaderRoute: typeof AdminClusterNodesRouteRouteImport
      parentRoute: typeof AdminRouteRoute
    }
    '/portal/settings/orders/': {
      id: '/portal/settings/orders/'
      path: '/'
      fullPath: '/portal/settings/orders/'
      preLoaderRoute: typeof PortalSettingsOrdersIndexRouteImport
      parentRoute: typeof PortalSettingsOrdersRouteRoute
    }
    '/portal/jobs/inter/': {
      id: '/portal/jobs/inter/'
      path: '/jobs/inter'
      fullPath: '/portal/jobs/inter'
      preLoaderRoute: typeof PortalJobsInterIndexRouteImport
      parentRoute: typeof PortalRouteRoute
    }
    '/portal/jobs/custom/': {
      id: '/portal/jobs/custom/'
      path: '/jobs/custom'
      fullPath: '/portal/jobs/custom'
      preLoaderRoute: typeof PortalJobsCustomIndexRouteImport
      parentRoute: typeof PortalRouteRoute
    }
    '/portal/env/registry/': {
      id: '/portal/env/registry/'
      path: '/env/registry'
      fullPath: '/portal/env/registry'
      preLoaderRoute: typeof PortalEnvRegistryIndexRouteImport
      parentRoute: typeof PortalRouteRoute
    }
    '/portal/env/images/': {
      id: '/portal/env/images/'
      path: '/env/images'
      fullPath: '/portal/env/images'
      preLoaderRoute: typeof PortalEnvImagesIndexRouteImport
      parentRoute: typeof PortalRouteRoute
    }
    '/portal/data/models/': {
      id: '/portal/data/models/'
      path: '/'
      fullPath: '/portal/data/models/'
      preLoaderRoute: typeof PortalDataModelsIndexRouteImport
      parentRoute: typeof PortalDataModelsRouteRoute
    }
    '/portal/data/datasets/': {
      id: '/portal/data/datasets/'
      path: '/'
      fullPath: '/portal/data/datasets/'
      preLoaderRoute: typeof PortalDataDatasetsIndexRouteImport
      parentRoute: typeof PortalDataDatasetsRouteRoute
    }
    '/portal/data/blocks/': {
      id: '/portal/data/blocks/'
      path: '/'
      fullPath: '/portal/data/blocks/'
      preLoaderRoute: typeof PortalDataBlocksIndexRouteImport
      parentRoute: typeof PortalDataBlocksRouteRoute
    }
    '/admin/settings/orders/': {
      id: '/admin/settings/orders/'
      path: '/'
      fullPath: '/admin/settings/orders/'
      preLoaderRoute: typeof AdminSettingsOrdersIndexRouteImport
      parentRoute: typeof AdminSettingsOrdersRouteRoute
    }
    '/admin/env/registry/': {
      id: '/admin/env/registry/'
      path: '/'
      fullPath: '/admin/env/registry/'
      preLoaderRoute: typeof AdminEnvRegistryIndexRouteImport
      parentRoute: typeof AdminEnvRegistryRouteRoute
    }
    '/admin/env/images/': {
      id: '/admin/env/images/'
      path: '/env/images'
      fullPath: '/admin/env/images'
      preLoaderRoute: typeof AdminEnvImagesIndexRouteImport
      parentRoute: typeof AdminRouteRoute
    }
    '/admin/cluster/resources/': {
      id: '/admin/cluster/resources/'
      path: '/'
      fullPath: '/admin/cluster/resources/'
      preLoaderRoute: typeof AdminClusterResourcesIndexRouteImport
      parentRoute: typeof AdminClusterResourcesRouteRoute
    }
    '/admin/cluster/nodes/': {
      id: '/admin/cluster/nodes/'
      path: '/'
      fullPath: '/admin/cluster/nodes/'
      preLoaderRoute: typeof AdminClusterNodesIndexRouteImport
      parentRoute: typeof AdminClusterNodesRouteRoute
    }
    '/portal/jobs/new/tensorflow-ps-job': {
      id: '/portal/jobs/new/tensorflow-ps-job'
      path: '/tensorflow-ps-job'
      fullPath: '/portal/jobs/new/tensorflow-ps-job'
      preLoaderRoute: typeof PortalJobsNewTensorflowPsJobRouteImport
      parentRoute: typeof PortalJobsNewRouteRoute
    }
    '/portal/jobs/new/single-job': {
      id: '/portal/jobs/new/single-job'
      path: '/single-job'
      fullPath: '/portal/jobs/new/single-job'
      preLoaderRoute: typeof PortalJobsNewSingleJobRouteImport
      parentRoute: typeof PortalJobsNewRouteRoute
    }
    '/portal/jobs/new/seacs-job': {
      id: '/portal/jobs/new/seacs-job'
      path: '/seacs-job'
      fullPath: '/portal/jobs/new/seacs-job'
      preLoaderRoute: typeof PortalJobsNewSeacsJobRouteImport
      parentRoute: typeof PortalJobsNewRouteRoute
    }
    '/portal/jobs/new/pytorch-ddp-job': {
      id: '/portal/jobs/new/pytorch-ddp-job'
      path: '/pytorch-ddp-job'
      fullPath: '/portal/jobs/new/pytorch-ddp-job'
      preLoaderRoute: typeof PortalJobsNewPytorchDdpJobRouteImport
      parentRoute: typeof PortalJobsNewRouteRoute
    }
    '/portal/jobs/new/jupyter-job': {
      id: '/portal/jobs/new/jupyter-job'
      path: '/jupyter-job'
      fullPath: '/portal/jobs/new/jupyter-job'
      preLoaderRoute: typeof PortalJobsNewJupyterJobRouteImport
      parentRoute: typeof PortalJobsNewRouteRoute
    }
    '/portal/jobs/new/emias-jupyter-job': {
      id: '/portal/jobs/new/emias-jupyter-job'
      path: '/emias-jupyter-job'
      fullPath: '/portal/jobs/new/emias-jupyter-job'
      preLoaderRoute: typeof PortalJobsNewEmiasJupyterJobRouteImport
      parentRoute: typeof PortalJobsNewRouteRoute
    }
    '/portal/jobs/new/emias-job': {
      id: '/portal/jobs/new/emias-job'
      path: '/emias-job'
      fullPath: '/portal/jobs/new/emias-job'
      preLoaderRoute: typeof PortalJobsNewEmiasJobRouteImport
      parentRoute: typeof PortalJobsNewRouteRoute
    }
    '/portal/jobs/detail/$name': {
      id: '/portal/jobs/detail/$name'
      path: '/$name'
      fullPath: '/portal/jobs/detail/$name'
      preLoaderRoute: typeof PortalJobsDetailNameRouteImport
      parentRoute: typeof PortalJobsDetailRouteRoute
    }
    '/portal/env/registry/$name': {
      id: '/portal/env/registry/$name'
      path: '/env/registry/$name'
      fullPath: '/portal/env/registry/$name'
      preLoaderRoute: typeof PortalEnvRegistryNameRouteImport
      parentRoute: typeof PortalRouteRoute
    }
    '/portal/data/models/$id': {
      id: '/portal/data/models/$id'
      path: '/$id'
      fullPath: '/portal/data/models/$id'
      preLoaderRoute: typeof PortalDataModelsIdRouteImport
      parentRoute: typeof PortalDataModelsRouteRoute
    }
    '/portal/data/datasets/$id': {
      id: '/portal/data/datasets/$id'
      path: '/$id'
      fullPath: '/portal/data/datasets/$id'
      preLoaderRoute: typeof PortalDataDatasetsIdRouteImport
      parentRoute: typeof PortalDataDatasetsRouteRoute
    }
    '/portal/data/blocks/$id': {
      id: '/portal/data/blocks/$id'
      path: '/$id'
      fullPath: '/portal/data/blocks/$id'
      preLoaderRoute: typeof PortalDataBlocksIdRouteImport
      parentRoute: typeof PortalDataBlocksRouteRoute
    }
    '/admin/settings/orders/$id': {
      id: '/admin/settings/orders/$id'
      path: '/$id'
      fullPath: '/admin/settings/orders/$id'
      preLoaderRoute: typeof AdminSettingsOrdersIdRouteImport
      parentRoute: typeof AdminSettingsOrdersRouteRoute
    }
    '/admin/env/registry/$name': {
      id: '/admin/env/registry/$name'
      path: '/$name'
      fullPath: '/admin/env/registry/$name'
      preLoaderRoute: typeof AdminEnvRegistryNameRouteImport
      parentRoute: typeof AdminEnvRegistryRouteRoute
    }
    '/admin/cluster/nodes/$node': {
      id: '/admin/cluster/nodes/$node'
      path: '/$node'
      fullPath: '/admin/cluster/nodes/$node'
      preLoaderRoute: typeof AdminClusterNodesNodeRouteImport
      parentRoute: typeof AdminClusterNodesRouteRoute
    }
  }
}

interface AdminAccountsRouteRouteChildren {
  AdminAccountsIdRoute: typeof AdminAccountsIdRoute
  AdminAccountsIndexRoute: typeof AdminAccountsIndexRoute
}

const AdminAccountsRouteRouteChildren: AdminAccountsRouteRouteChildren = {
  AdminAccountsIdRoute: AdminAccountsIdRoute,
  AdminAccountsIndexRoute: AdminAccountsIndexRoute,
}

const AdminAccountsRouteRouteWithChildren =
  AdminAccountsRouteRoute._addFileChildren(AdminAccountsRouteRouteChildren)

interface AdminDataRouteRouteChildren {
  AdminDataIdRoute: typeof AdminDataIdRoute
  AdminDataIndexRoute: typeof AdminDataIndexRoute
}

const AdminDataRouteRouteChildren: AdminDataRouteRouteChildren = {
  AdminDataIdRoute: AdminDataIdRoute,
  AdminDataIndexRoute: AdminDataIndexRoute,
}

const AdminDataRouteRouteWithChildren = AdminDataRouteRoute._addFileChildren(
  AdminDataRouteRouteChildren,
)

interface AdminJobsRouteRouteChildren {
  AdminJobsNameRoute: typeof AdminJobsNameRoute
  AdminJobsIndexRoute: typeof AdminJobsIndexRoute
}

const AdminJobsRouteRouteChildren: AdminJobsRouteRouteChildren = {
  AdminJobsNameRoute: AdminJobsNameRoute,
  AdminJobsIndexRoute: AdminJobsIndexRoute,
}

const AdminJobsRouteRouteWithChildren = AdminJobsRouteRoute._addFileChildren(
  AdminJobsRouteRouteChildren,
)

interface AdminUsersRouteRouteChildren {
  AdminUsersNameRoute: typeof AdminUsersNameRoute
  AdminUsersIndexRoute: typeof AdminUsersIndexRoute
}

const AdminUsersRouteRouteChildren: AdminUsersRouteRouteChildren = {
  AdminUsersNameRoute: AdminUsersNameRoute,
  AdminUsersIndexRoute: AdminUsersIndexRoute,
}

const AdminUsersRouteRouteWithChildren = AdminUsersRouteRoute._addFileChildren(
  AdminUsersRouteRouteChildren,
)

interface AdminClusterNodesRouteRouteChildren {
  AdminClusterNodesNodeRoute: typeof AdminClusterNodesNodeRoute
  AdminClusterNodesIndexRoute: typeof AdminClusterNodesIndexRoute
}

const AdminClusterNodesRouteRouteChildren: AdminClusterNodesRouteRouteChildren =
  {
    AdminClusterNodesNodeRoute: AdminClusterNodesNodeRoute,
    AdminClusterNodesIndexRoute: AdminClusterNodesIndexRoute,
  }

const AdminClusterNodesRouteRouteWithChildren =
  AdminClusterNodesRouteRoute._addFileChildren(
    AdminClusterNodesRouteRouteChildren,
  )

interface AdminClusterResourcesRouteRouteChildren {
  AdminClusterResourcesIndexRoute: typeof AdminClusterResourcesIndexRoute
}

const AdminClusterResourcesRouteRouteChildren: AdminClusterResourcesRouteRouteChildren =
  {
    AdminClusterResourcesIndexRoute: AdminClusterResourcesIndexRoute,
  }

const AdminClusterResourcesRouteRouteWithChildren =
  AdminClusterResourcesRouteRoute._addFileChildren(
    AdminClusterResourcesRouteRouteChildren,
  )

interface AdminEnvRegistryRouteRouteChildren {
  AdminEnvRegistryNameRoute: typeof AdminEnvRegistryNameRoute
  AdminEnvRegistryIndexRoute: typeof AdminEnvRegistryIndexRoute
}

const AdminEnvRegistryRouteRouteChildren: AdminEnvRegistryRouteRouteChildren = {
  AdminEnvRegistryNameRoute: AdminEnvRegistryNameRoute,
  AdminEnvRegistryIndexRoute: AdminEnvRegistryIndexRoute,
}

const AdminEnvRegistryRouteRouteWithChildren =
  AdminEnvRegistryRouteRoute._addFileChildren(
    AdminEnvRegistryRouteRouteChildren,
  )

interface AdminSettingsOrdersRouteRouteChildren {
  AdminSettingsOrdersIdRoute: typeof AdminSettingsOrdersIdRoute
  AdminSettingsOrdersIndexRoute: typeof AdminSettingsOrdersIndexRoute
}

const AdminSettingsOrdersRouteRouteChildren: AdminSettingsOrdersRouteRouteChildren =
  {
    AdminSettingsOrdersIdRoute: AdminSettingsOrdersIdRoute,
    AdminSettingsOrdersIndexRoute: AdminSettingsOrdersIndexRoute,
  }

const AdminSettingsOrdersRouteRouteWithChildren =
  AdminSettingsOrdersRouteRoute._addFileChildren(
    AdminSettingsOrdersRouteRouteChildren,
  )

interface AdminRouteRouteChildren {
  AdminAccountsRouteRoute: typeof AdminAccountsRouteRouteWithChildren
  AdminDataRouteRoute: typeof AdminDataRouteRouteWithChildren
  AdminJobsRouteRoute: typeof AdminJobsRouteRouteWithChildren
  AdminUsersRouteRoute: typeof AdminUsersRouteRouteWithChildren
  AdminIndexRoute: typeof AdminIndexRoute
  AdminClusterNodesRouteRoute: typeof AdminClusterNodesRouteRouteWithChildren
  AdminClusterResourcesRouteRoute: typeof AdminClusterResourcesRouteRouteWithChildren
  AdminEnvRegistryRouteRoute: typeof AdminEnvRegistryRouteRouteWithChildren
  AdminSettingsOrdersRouteRoute: typeof AdminSettingsOrdersRouteRouteWithChildren
  AdminFilesSplatRoute: typeof AdminFilesSplatRoute
  AdminMonitorGpuRoute: typeof AdminMonitorGpuRoute
  AdminMonitorIdleRoute: typeof AdminMonitorIdleRoute
  AdminMonitorNetworkRoute: typeof AdminMonitorNetworkRoute
  AdminSettingsVersionRoute: typeof AdminSettingsVersionRoute
  AdminCronjobsIndexRoute: typeof AdminCronjobsIndexRoute
  AdminSettingsIndexRoute: typeof AdminSettingsIndexRoute
  AdminEnvImagesIndexRoute: typeof AdminEnvImagesIndexRoute
}

const AdminRouteRouteChildren: AdminRouteRouteChildren = {
  AdminAccountsRouteRoute: AdminAccountsRouteRouteWithChildren,
  AdminDataRouteRoute: AdminDataRouteRouteWithChildren,
  AdminJobsRouteRoute: AdminJobsRouteRouteWithChildren,
  AdminUsersRouteRoute: AdminUsersRouteRouteWithChildren,
  AdminIndexRoute: AdminIndexRoute,
  AdminClusterNodesRouteRoute: AdminClusterNodesRouteRouteWithChildren,
  AdminClusterResourcesRouteRoute: AdminClusterResourcesRouteRouteWithChildren,
  AdminEnvRegistryRouteRoute: AdminEnvRegistryRouteRouteWithChildren,
  AdminSettingsOrdersRouteRoute: AdminSettingsOrdersRouteRouteWithChildren,
  AdminFilesSplatRoute: AdminFilesSplatRoute,
  AdminMonitorGpuRoute: AdminMonitorGpuRoute,
  AdminMonitorIdleRoute: AdminMonitorIdleRoute,
  AdminMonitorNetworkRoute: AdminMonitorNetworkRoute,
  AdminSettingsVersionRoute: AdminSettingsVersionRoute,
  AdminCronjobsIndexRoute: AdminCronjobsIndexRoute,
  AdminSettingsIndexRoute: AdminSettingsIndexRoute,
  AdminEnvImagesIndexRoute: AdminEnvImagesIndexRoute,
}

const AdminRouteRouteWithChildren = AdminRouteRoute._addFileChildren(
  AdminRouteRouteChildren,
)

interface PortalOverviewRouteRouteChildren {
  PortalOverviewNodeRoute: typeof PortalOverviewNodeRoute
  PortalOverviewIndexRoute: typeof PortalOverviewIndexRoute
}

const PortalOverviewRouteRouteChildren: PortalOverviewRouteRouteChildren = {
  PortalOverviewNodeRoute: PortalOverviewNodeRoute,
  PortalOverviewIndexRoute: PortalOverviewIndexRoute,
}

const PortalOverviewRouteRouteWithChildren =
  PortalOverviewRouteRoute._addFileChildren(PortalOverviewRouteRouteChildren)

interface PortalSettingsOrdersRouteRouteChildren {
  PortalSettingsOrdersIndexRoute: typeof PortalSettingsOrdersIndexRoute
}

const PortalSettingsOrdersRouteRouteChildren: PortalSettingsOrdersRouteRouteChildren =
  {
    PortalSettingsOrdersIndexRoute: PortalSettingsOrdersIndexRoute,
  }

const PortalSettingsOrdersRouteRouteWithChildren =
  PortalSettingsOrdersRouteRoute._addFileChildren(
    PortalSettingsOrdersRouteRouteChildren,
  )

interface PortalSettingsRouteRouteChildren {
  PortalSettingsOrdersRouteRoute: typeof PortalSettingsOrdersRouteRouteWithChildren
  PortalSettingsUserRoute: typeof PortalSettingsUserRoute
  PortalSettingsVersionRoute: typeof PortalSettingsVersionRoute
  PortalSettingsIndexRoute: typeof PortalSettingsIndexRoute
}

const PortalSettingsRouteRouteChildren: PortalSettingsRouteRouteChildren = {
  PortalSettingsOrdersRouteRoute: PortalSettingsOrdersRouteRouteWithChildren,
  PortalSettingsUserRoute: PortalSettingsUserRoute,
  PortalSettingsVersionRoute: PortalSettingsVersionRoute,
  PortalSettingsIndexRoute: PortalSettingsIndexRoute,
}

const PortalSettingsRouteRouteWithChildren =
  PortalSettingsRouteRoute._addFileChildren(PortalSettingsRouteRouteChildren)

interface PortalTemplatesRouteRouteChildren {
  PortalTemplatesIndexRoute: typeof PortalTemplatesIndexRoute
}

const PortalTemplatesRouteRouteChildren: PortalTemplatesRouteRouteChildren = {
  PortalTemplatesIndexRoute: PortalTemplatesIndexRoute,
}

const PortalTemplatesRouteRouteWithChildren =
  PortalTemplatesRouteRoute._addFileChildren(PortalTemplatesRouteRouteChildren)

interface PortalUsersRouteRouteChildren {
  PortalUsersNameRoute: typeof PortalUsersNameRoute
  PortalUsersIndexRoute: typeof PortalUsersIndexRoute
}

const PortalUsersRouteRouteChildren: PortalUsersRouteRouteChildren = {
  PortalUsersNameRoute: PortalUsersNameRoute,
  PortalUsersIndexRoute: PortalUsersIndexRoute,
}

const PortalUsersRouteRouteWithChildren =
  PortalUsersRouteRoute._addFileChildren(PortalUsersRouteRouteChildren)

interface PortalDataBlocksRouteRouteChildren {
  PortalDataBlocksIdRoute: typeof PortalDataBlocksIdRoute
  PortalDataBlocksIndexRoute: typeof PortalDataBlocksIndexRoute
}

const PortalDataBlocksRouteRouteChildren: PortalDataBlocksRouteRouteChildren = {
  PortalDataBlocksIdRoute: PortalDataBlocksIdRoute,
  PortalDataBlocksIndexRoute: PortalDataBlocksIndexRoute,
}

const PortalDataBlocksRouteRouteWithChildren =
  PortalDataBlocksRouteRoute._addFileChildren(
    PortalDataBlocksRouteRouteChildren,
  )

interface PortalDataDatasetsRouteRouteChildren {
  PortalDataDatasetsIdRoute: typeof PortalDataDatasetsIdRoute
  PortalDataDatasetsIndexRoute: typeof PortalDataDatasetsIndexRoute
}

const PortalDataDatasetsRouteRouteChildren: PortalDataDatasetsRouteRouteChildren =
  {
    PortalDataDatasetsIdRoute: PortalDataDatasetsIdRoute,
    PortalDataDatasetsIndexRoute: PortalDataDatasetsIndexRoute,
  }

const PortalDataDatasetsRouteRouteWithChildren =
  PortalDataDatasetsRouteRoute._addFileChildren(
    PortalDataDatasetsRouteRouteChildren,
  )

interface PortalDataModelsRouteRouteChildren {
  PortalDataModelsIdRoute: typeof PortalDataModelsIdRoute
  PortalDataModelsIndexRoute: typeof PortalDataModelsIndexRoute
}

const PortalDataModelsRouteRouteChildren: PortalDataModelsRouteRouteChildren = {
  PortalDataModelsIdRoute: PortalDataModelsIdRoute,
  PortalDataModelsIndexRoute: PortalDataModelsIndexRoute,
}

const PortalDataModelsRouteRouteWithChildren =
  PortalDataModelsRouteRoute._addFileChildren(
    PortalDataModelsRouteRouteChildren,
  )

interface PortalJobsDetailRouteRouteChildren {
  PortalJobsDetailNameRoute: typeof PortalJobsDetailNameRoute
}

const PortalJobsDetailRouteRouteChildren: PortalJobsDetailRouteRouteChildren = {
  PortalJobsDetailNameRoute: PortalJobsDetailNameRoute,
}

const PortalJobsDetailRouteRouteWithChildren =
  PortalJobsDetailRouteRoute._addFileChildren(
    PortalJobsDetailRouteRouteChildren,
  )

interface PortalJobsNewRouteRouteChildren {
  PortalJobsNewEmiasJobRoute: typeof PortalJobsNewEmiasJobRoute
  PortalJobsNewEmiasJupyterJobRoute: typeof PortalJobsNewEmiasJupyterJobRoute
  PortalJobsNewJupyterJobRoute: typeof PortalJobsNewJupyterJobRoute
  PortalJobsNewPytorchDdpJobRoute: typeof PortalJobsNewPytorchDdpJobRoute
  PortalJobsNewSeacsJobRoute: typeof PortalJobsNewSeacsJobRoute
  PortalJobsNewSingleJobRoute: typeof PortalJobsNewSingleJobRoute
  PortalJobsNewTensorflowPsJobRoute: typeof PortalJobsNewTensorflowPsJobRoute
}

const PortalJobsNewRouteRouteChildren: PortalJobsNewRouteRouteChildren = {
  PortalJobsNewEmiasJobRoute: PortalJobsNewEmiasJobRoute,
  PortalJobsNewEmiasJupyterJobRoute: PortalJobsNewEmiasJupyterJobRoute,
  PortalJobsNewJupyterJobRoute: PortalJobsNewJupyterJobRoute,
  PortalJobsNewPytorchDdpJobRoute: PortalJobsNewPytorchDdpJobRoute,
  PortalJobsNewSeacsJobRoute: PortalJobsNewSeacsJobRoute,
  PortalJobsNewSingleJobRoute: PortalJobsNewSingleJobRoute,
  PortalJobsNewTensorflowPsJobRoute: PortalJobsNewTensorflowPsJobRoute,
}

const PortalJobsNewRouteRouteWithChildren =
  PortalJobsNewRouteRoute._addFileChildren(PortalJobsNewRouteRouteChildren)

interface PortalRouteRouteChildren {
  PortalOverviewRouteRoute: typeof PortalOverviewRouteRouteWithChildren
  PortalSettingsRouteRoute: typeof PortalSettingsRouteRouteWithChildren
  PortalTemplatesRouteRoute: typeof PortalTemplatesRouteRouteWithChildren
  PortalUsersRouteRoute: typeof PortalUsersRouteRouteWithChildren
  PortalIndexRoute: typeof PortalIndexRoute
  PortalDataBlocksRouteRoute: typeof PortalDataBlocksRouteRouteWithChildren
  PortalDataDatasetsRouteRoute: typeof PortalDataDatasetsRouteRouteWithChildren
  PortalDataModelsRouteRoute: typeof PortalDataModelsRouteRouteWithChildren
  PortalJobsDetailRouteRoute: typeof PortalJobsDetailRouteRouteWithChildren
  PortalJobsNewRouteRoute: typeof PortalJobsNewRouteRouteWithChildren
  PortalFilesSplatRoute: typeof PortalFilesSplatRoute
  PortalMonitorGpuRoute: typeof PortalMonitorGpuRoute
  PortalMonitorIdleRoute: typeof PortalMonitorIdleRoute
  PortalMonitorNetworkRoute: typeof PortalMonitorNetworkRoute
  PortalEnvRegistryNameRoute: typeof PortalEnvRegistryNameRoute
  PortalEnvImagesIndexRoute: typeof PortalEnvImagesIndexRoute
  PortalEnvRegistryIndexRoute: typeof PortalEnvRegistryIndexRoute
  PortalJobsCustomIndexRoute: typeof PortalJobsCustomIndexRoute
  PortalJobsInterIndexRoute: typeof PortalJobsInterIndexRoute
}

const PortalRouteRouteChildren: PortalRouteRouteChildren = {
  PortalOverviewRouteRoute: PortalOverviewRouteRouteWithChildren,
  PortalSettingsRouteRoute: PortalSettingsRouteRouteWithChildren,
  PortalTemplatesRouteRoute: PortalTemplatesRouteRouteWithChildren,
  PortalUsersRouteRoute: PortalUsersRouteRouteWithChildren,
  PortalIndexRoute: PortalIndexRoute,
  PortalDataBlocksRouteRoute: PortalDataBlocksRouteRouteWithChildren,
  PortalDataDatasetsRouteRoute: PortalDataDatasetsRouteRouteWithChildren,
  PortalDataModelsRouteRoute: PortalDataModelsRouteRouteWithChildren,
  PortalJobsDetailRouteRoute: PortalJobsDetailRouteRouteWithChildren,
  PortalJobsNewRouteRoute: PortalJobsNewRouteRouteWithChildren,
  PortalFilesSplatRoute: PortalFilesSplatRoute,
  PortalMonitorGpuRoute: PortalMonitorGpuRoute,
  PortalMonitorIdleRoute: PortalMonitorIdleRoute,
  PortalMonitorNetworkRoute: PortalMonitorNetworkRoute,
  PortalEnvRegistryNameRoute: PortalEnvRegistryNameRoute,
  PortalEnvImagesIndexRoute: PortalEnvImagesIndexRoute,
  PortalEnvRegistryIndexRoute: PortalEnvRegistryIndexRoute,
  PortalJobsCustomIndexRoute: PortalJobsCustomIndexRoute,
  PortalJobsInterIndexRoute: PortalJobsInterIndexRoute,
}

const PortalRouteRouteWithChildren = PortalRouteRoute._addFileChildren(
  PortalRouteRouteChildren,
)

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AdminRouteRoute: AdminRouteRouteWithChildren,
  PortalRouteRoute: PortalRouteRouteWithChildren,
  AuthIndexRoute: AuthIndexRoute,
  IngressJupyterNameRoute: IngressJupyterNameRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
