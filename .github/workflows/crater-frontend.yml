# Copyright 2025 RAIDS Lab
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

name: Build and Push Docker Image

on:
  push:
    branches: [main]
    tags:
      - 'v*.*.*'
    paths-ignore:
      - 'hack/**'
      - 'docs/**'
      - 'README.md'
      - 'LICENSE'
      - '.gitignore'
      - 'Makefile'

env:
  # Modified to use GHCR configuration
  REGISTRY: ghcr.io
  # Set your Docker Hub username and repository name
  IMAGE_REPO: raids-lab/crater-frontend

jobs:
  build-frontend:
    runs-on: ubuntu-latest
    outputs:
      app_version: ${{ steps.set-version.outputs.app_version }}
      commit_sha: ${{ steps.set-version.outputs.commit_sha }}
      build_type: ${{ steps.set-version.outputs.build_type }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v5
        with:
          fetch-depth: 0

      - name: Set version variables
        id: set-version
        run: |
          COMMIT_SHA="${{ github.sha }}"
          SHORT_SHA="${COMMIT_SHA:0:7}"
          
          # Check if triggered by tag
          if [[ "${{ github.ref_type }}" == "tag" ]]; then
            # Tag trigger: use tag version (keep v prefix)
            APP_VERSION="${{ github.ref_name }}"
            BUILD_TYPE="release"
          else
            # Branch trigger: use commit SHA
            APP_VERSION="$SHORT_SHA"
            BUILD_TYPE="development"
          fi
          
          # Set outputs
          echo "app_version=$APP_VERSION" >> $GITHUB_OUTPUT
          echo "commit_sha=$COMMIT_SHA" >> $GITHUB_OUTPUT
          echo "build_type=$BUILD_TYPE" >> $GITHUB_OUTPUT
          
          # Set environment variables
          echo "VITE_APP_VERSION=$APP_VERSION" >> $GITHUB_ENV
          echo "VITE_APP_COMMIT_SHA=$COMMIT_SHA" >> $GITHUB_ENV
          echo "VITE_APP_BUILD_TYPE=$BUILD_TYPE" >> $GITHUB_ENV
          echo "VITE_APP_BUILD_TIME=$(date -u +%Y-%m-%dT%H:%M:%SZ)" >> $GITHUB_ENV
          echo "HUSKY=0" >> $GITHUB_ENV

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 10
          run_install: false

      - name: Setup Node.js
        uses: actions/setup-node@v5
        with:
          node-version: 22
          cache: 'pnpm'

      - name: Install dependencies
        run: pnpm install

      - name: Build project
        run: pnpm build

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: dist
          path: dist/

  build-and-push-image:
    needs: build-frontend
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Download artifacts
        uses: actions/download-artifact@v5
        with:
          name: dist
          path: dist/

      # Set up QEMU for multi-architecture builds
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      # Create builder instance for multi-platform support
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      # Log in to GHCR
      - name: Log in to GHCR
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          # list of Docker images to use as base name for tags
          images: |
            ghcr.io/raids-lab/crater-frontend
          # generate Docker tags based on the following events/attributes
          tags: |
            type=ref,event=branch
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}
            type=raw,value=latest,enable={{is_default_branch}}
            type=sha

      - name: Build and push multi-arch image
        uses: docker/build-push-action@v6
        with:
          context: .
          file: Dockerfile
          platforms: linux/amd64, linux/arm64
          push: true
          tags: ${{ steps.meta.outputs.tags }}

      - uses: quartx-analytics/ghcr-cleaner@v1
        with:
          owner-type: org # or user
          token: ${{ secrets.PAT_TOKEN  }}
          repository-owner: ${{ github.repository_owner }}
          package-name: crater-frontend
          delete-untagged: true
          keep-at-most: 2
          skip-tags: v*
